class Solution {
    public int maxProfit(int k, int[] prices) {
        int n=prices.length;
        int [][]dp=new int[k+1][n];
        if(n<2)
            return 0;
        for(int i=1;i<=k;i++)
        {
            for(int j=1;j<n;j++)
            {
                dp[i][j]=Math.max(dp[i][j-1],help(i,j,prices,dp));
            }
        }
        return dp[k][n-1];
        
    }
    
    private int help(int k,int num,int[]prices,int [][]dp)
    {
        int maximum=0;
        for(int i=0;i<num;i++)
        {
            maximum=Math.max(maximum,prices[num]-prices[i]+dp[k-1][i]);
        }
        return maximum;
    }
}